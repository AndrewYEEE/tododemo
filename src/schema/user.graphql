type Query {
  """
  Query User by userid.
  """
  queryUser(id: String!): User
}

type Mutation {
  """
  Create a User.
  """
  createUser(basicinfo: BasicInfo!): Result
  """
  Update the detail info for user.
  """
  updateSelf(userinfo: UserInfo!): User
  """
  Update a user detail by userid. 
  """
  updateUser(id: String!, userinfo: UserInfo!): User
  """
  Delete a user with email. 
  """
  deleteUser(email: String!): Result
}

input BasicInfo{
  firstname: String
  lastname: String
  username: String!
  email: String!
  password: String!
  age: Int
}

input UserInfo{
  firstname: String
  lastname: String
  username: String
  email: String!
  age: Int
}

type User {
  id: String!
  firstname: String
  lastname: String
  username: String!
  email: String!
  role: String!
  age: Int
}

type Result {
  id: String!
  status: Boolean!
}

enum Roles {
  ADMIN
  MEMBER
  UNKNOWN
}